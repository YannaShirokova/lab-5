---
title: "Lab 5: Murder in SQL City"
author: "Yanna Shirokova"
date: "October 24, 2024"
editor: source
embed-resources: true
execute:
  echo: true
  error: false
  message: false
format: 
  html:
    code-fold: true
    code-tools: true
    theme: cosmo
    toc: true
---

For this lab, you will be joining and filtering related datasets to solve a murder mystery!

## Instructions

Northwestern University's Knight Lab wanted to help sharpen users' database skills, so they created a murder mystery. Can you solve this crime in SQL City??

The relational data you will be working with contains tables with different pieces of information pertinent to the crime - people, social media check-ins, driver's licenses, crime scene reports, police interviews, and more!

![Database schema](https://mystery.knightlab.com/schema.png)

Solve the murder mystery, showing **all of your work in this document**. Your document and code must be well organized, easy to follow, and reproducible.

+ Use headers and written descriptions to indicate what you are doing.
+ Use `dplyr` verbs and `join` functions rather than just looking through the tables manually.
+ Use good code formatting practices.
+ Comment your code.
+ Cite any external sources you use to solve the mystery.

### Tips 

You may find the `pull()` function handy for displaying each clue as you go along.


## Access the Data

This code chunk will read in all of the tables of data for you. Don't modify or remove this!

```{r}
#| message: false
#| warning: false
#| label: read-in-data

library(tidyverse)

# If purrr is not detected, install the package
if (!"purrr" %in% installed.packages()) install.packages("purrr")

source("https://raw.githubusercontent.com/atheobold/groupworthy-data-science/main/labs/instructions/lab-5-setup.R")
```

## Solve the Crime

### Crime Scene Report

Detective Wickham reaches out to you...

> A crime has taken place and I need your help! There was a murder in SQL City sometime on January 15, 2018. Could you retrieve the crime scene report from the police departmentâ€™s database and follow the clues to find the person responsible for the murder?!

**Follow the evidence to the person responsible for the murder, building a report as you go.**
Hint: Make sure you check for interviews with any suspects!

```{r}
#| label: inspecting-crime-scene-report

# Look at first clues
# Murder
# Jan 15, 2018
# SQL city

# FIXED
crime_scene_report |>
  mutate(date = ymd(date)) |>
  filter(city == "SQL City", 
         type == "murder", 
         date == ymd(20180115)) |>
  select(description)

```
### Looking at Witnesses
```{r}
#| label: looking-at-witnesses

# Lets find witnesses and look at their interviews
# Clues:
# The first witness lives at the last house on "Northwestern Dr"
# The second witness, named Annabel, lives somewhere on "Franklin Ave"

person |>
  filter(
    (address_street_name == "Northwestern Dr" & 
     address_number == max(address_number)) | 
    (str_detect(name, "Annabel") &
    address_street_name == "Franklin Ave")) |>
  left_join(interview, by = c("id" = "person_id")) |>
  select(transcript)

```
### Finding the Murderer based on Interviews
```{r}
#| label: finding-the-murderer

# Lets see what we can find from the interviews

# Clues: 
# The membership number on the bag started with "48Z"
# I was working out last week on January the 9th

# FIXED
membership_ids <- get_fit_now_check_in |>
  filter(str_detect(membership_id, "^48Z"),
         ymd(check_in_date) == ymd("2018-01-09")) |>
  select(membership_id)

# Clue: The man got into a car with a plate that included "H42W"
#FIXED
driver_ids <- drivers_license |>
  filter(gender == "male", 
         str_detect(plate_number, "H42W")) |>
  select(id) |>
  rename(license_id = id) 


# Find the person id from driver_ids (above)
# FIXED
person_ids <- driver_ids |>
  inner_join(person, by = "license_id") |>
  select(id)

# Join on the person id from person_ids (above)
# Join on the membership_ids (above)
# Clue: Only gold members have those bags. 
get_fit_now_member |>
  inner_join(person_ids, by = c("person_id" = "id")) |>
  inner_join(membership_ids, by = c("id" = "membership_id")) |>
  filter(membership_status == "gold")

```
### Finding The Person Behind The Murder
```{r}
#| label: finding-the-person-behind-the-murder

# ADDED

# Look at Jeremy Bowers (murderer) interview
interview |>
  filter(person_id == "67318") |>
  select(transcript)

# Transcript/ Clues:
# I was hired by a woman with a lot of money. I don't know her name but 
# I know she's around 5'5" (65") or 5'7" (67"). She has red hair and she 
# drives a Tesla Model S. I know that she attended the SQL Symphony Concert 
# 3 times in December 2017.
drivers_license |>
  rename(license_id = id) |>
  filter(
    gender == "female",             
    hair_color == "red",            
    height >= 65 & height <= 67,                  
    car_make == "Tesla",           
    car_model == "Model S"          
  ) |>
  right_join(person, by = "license_id") |>
  # get rid of na columns from right join
  drop_na() |>
  inner_join(facebook_event_checkin, by = c("id" = "person_id")) |>
  filter(startsWith(as.character(date), "2017")) |>
  group_by(id, event_name) |>
  summarise(event_count = n(), .groups = "drop") |>
  filter(event_count == 3) |>
  inner_join(person, by = "id")

```

## And the final suspect is... 

*Put the name of the person responsible for the murder here:*

Jeremy Bowers was the murderer.
The person who set it up was Miranda Priestly!
























